<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="IP价值0.2版本" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="Connection" elementType="Header">
            <stringProp name="Header.name">Connection</stringProp>
            <stringProp name="Header.value">keep-alive</stringProp>
          </elementProp>
          <elementProp name="Content-Length" elementType="Header">
            <stringProp name="Header.name">Content-Length</stringProp>
            <stringProp name="Header.value">3047</stringProp>
          </elementProp>
          <elementProp name="Accept" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36</stringProp>
          </elementProp>
          <elementProp name="Content-Type" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
          </elementProp>
          <elementProp name="Accept-Encoding" elementType="Header">
            <stringProp name="Header.name">Accept-Encoding</stringProp>
            <stringProp name="Header.value">gzip, deflate</stringProp>
          </elementProp>
          <elementProp name="Accept-Language" elementType="Header">
            <stringProp name="Header.name">Accept-Language</stringProp>
            <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host1" elementType="Argument">
            <stringProp name="Argument.name">host1</stringProp>
            <stringProp name="Argument.value">47.98.63.78</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">192.168.17.214</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port1" elementType="Argument">
            <stringProp name="Argument.name">port1</stringProp>
            <stringProp name="Argument.value">8087</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">8080</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="IP价值" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1.中心主题脚本里进行区间转换（在区间内）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;calType&quot;: &quot;SCRIPT&quot;,
			&quot;scriptInfo&quot;: &quot;if(#测试1#&gt;=1&amp;#测试1#&lt;=4){return 3}else if(#测试2#&gt;4){return (#测试4#+4)/2*3}else if(#测试4#&gt;5){return  -10}else if(#测试4#&gt;5){return  -1000}&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;resource&quot;: [&quot;4&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;weight&quot;: &quot;0.5&quot;,
				&quot;uselessWeight&quot;: false,
				&quot;reject&quot;: false,
				&quot;value&quot;: &quot;4&quot;
			},
			&quot;children&quot;: []
		}, {
			&quot;data&quot;: {
				&quot;id&quot;: &quot;c1c179seilk0&quot;,
				&quot;created&quot;: 1584338714994,
				&quot;text&quot;: &quot;测试2&quot;,
				&quot;value&quot;: &quot;5&quot;,
				&quot;resource&quot;: [&quot;5&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;uselessWeight&quot;: false,
				&quot;reject&quot;: false,
				&quot;layout_mind_offset&quot;: {
					&quot;x&quot;: 0,
					&quot;y&quot;: 22
				}
			},
			&quot;children&quot;: []
		}, {
			&quot;data&quot;: {
				&quot;id&quot;: &quot;c1c4ywdtyu00&quot;,
				&quot;created&quot;: 1584349343341,
				&quot;text&quot;: &quot;测试4&quot;,
				&quot;layout_mind_offset&quot;: {
					&quot;x&quot;: 463,
					&quot;y&quot;: 384
				},
				&quot;value&quot;: &quot;7&quot;,
				&quot;resource&quot;: [&quot;7&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;weight&quot;: &quot;0.2&quot;,
				&quot;uselessWeight&quot;: false,
				&quot;reject&quot;: false
			},
			&quot;children&quot;: []
		}, {
			&quot;data&quot;: {
				&quot;id&quot;: &quot;c1c4yzvtk800&quot;,
				&quot;created&quot;: 1584349350959,
				&quot;text&quot;: &quot;测试3&quot;,
				&quot;layout_mind_offset&quot;: {
					&quot;x&quot;: 463,
					&quot;y&quot;: 169
				},
				&quot;value&quot;: &quot;6&quot;,
				&quot;resource&quot;: [&quot;6&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;weight&quot;: &quot;0.2&quot;,
				&quot;uselessWeight&quot;: false,
				&quot;reject&quot;: false
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1611408980">中心主题节点计算后得出的值为：3.0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="2.中心主题脚本里进行区间转换（不在区间内）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;calType&quot;: &quot;SCRIPT&quot;,
			&quot;scriptInfo&quot;: &quot;if(#测试1#&gt;=1&amp;#测试1#&lt;=3){return 3}else if(#测试2#&gt;4){return (#测试4#+4)/2*3}else if(#测试4#&gt;5){return  -10}else if(#测试4#&gt;5){return  -1000}&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;resource&quot;: [&quot;4&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;weight&quot;: &quot;0.5&quot;,
				&quot;uselessWeight&quot;: false,
				&quot;reject&quot;: false,
				&quot;value&quot;: &quot;4&quot;
			},
			&quot;children&quot;: []
		}, {
			&quot;data&quot;: {
				&quot;id&quot;: &quot;c1c179seilk0&quot;,
				&quot;created&quot;: 1584338714994,
				&quot;text&quot;: &quot;测试2&quot;,
				&quot;value&quot;: &quot;5&quot;,
				&quot;resource&quot;: [&quot;5&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;uselessWeight&quot;: false,
				&quot;reject&quot;: false,
				&quot;layout_mind_offset&quot;: {
					&quot;x&quot;: 0,
					&quot;y&quot;: 22
				}
			},
			&quot;children&quot;: []
		}, {
			&quot;data&quot;: {
				&quot;id&quot;: &quot;c1c4ywdtyu00&quot;,
				&quot;created&quot;: 1584349343341,
				&quot;text&quot;: &quot;测试4&quot;,
				&quot;layout_mind_offset&quot;: {
					&quot;x&quot;: 463,
					&quot;y&quot;: 384
				},
				&quot;value&quot;: &quot;7&quot;,
				&quot;resource&quot;: [&quot;7&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;weight&quot;: &quot;0.2&quot;,
				&quot;uselessWeight&quot;: false,
				&quot;reject&quot;: false
			},
			&quot;children&quot;: []
		}, {
			&quot;data&quot;: {
				&quot;id&quot;: &quot;c1c4yzvtk800&quot;,
				&quot;created&quot;: 1584349350959,
				&quot;text&quot;: &quot;测试3&quot;,
				&quot;layout_mind_offset&quot;: {
					&quot;x&quot;: 463,
					&quot;y&quot;: 169
				},
				&quot;value&quot;: &quot;6&quot;,
				&quot;resource&quot;: [&quot;6&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;weight&quot;: &quot;0.2&quot;,
				&quot;uselessWeight&quot;: false,
				&quot;reject&quot;: false
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1585877269">中心主题节点计算后得出的值为：16.5</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="3.中心主题脚本正常（按名称），走if成功，子节点都为常规（calType不传入）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;created&quot;:1584323286172,&quot;text&quot;:&quot;中心主题&quot;,&quot;calType&quot;:&quot;SCRIPT&quot;,&quot;scriptInfo&quot;:&quot;if(#测试1#!=3){return AVERAGE}else if(#测试2#&gt;4){return (#测试4#+4)/2*3}else if(#测试4#&gt;5){return  -10}else if(#测试4#&gt;5){return  -1000}&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;created&quot;:1584338713678,&quot;text&quot;:&quot;测试1&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;value&quot;:&quot;4&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;created&quot;:1584338714994,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;,&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.1&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22}},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;created&quot;:1584349343341,&quot;text&quot;:&quot;测试4&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;value&quot;:&quot;7&quot;,&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;created&quot;:1584349350959,&quot;text&quot;:&quot;测试3&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;value&quot;:&quot;6&quot;,&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1611407053">中心主题节点计算后得出的值为：5.5</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="4.中心节点脚本正常（按名称），走else if成功，子节点都为常规" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;created&quot;:1584323286172,&quot;text&quot;:&quot;中心主题&quot;,&quot;calType&quot;:&quot;SCRIPT&quot;,&quot;scriptInfo&quot;:&quot;if(#测试1#==3){return AVERAGE}else if(#测试2#&gt;4){return (#测试4#+4)/2*3}else if(#测试4#&gt;5){return  -10}else if(#测试4#&gt;5){return  -1000}&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;created&quot;:1584338713678,&quot;text&quot;:&quot;测试1&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;value&quot;:&quot;4&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;created&quot;:1584338714994,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;,&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.1&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22}},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;created&quot;:1584349343341,&quot;text&quot;:&quot;测试4&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;value&quot;:&quot;7&quot;,&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;created&quot;:1584349350959,&quot;text&quot;:&quot;测试3&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;value&quot;:&quot;6&quot;,&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1917555142">中心主题节点计算后得出的值为：16.5;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="5.中心主题节点传入常规calType=‘’，传入脚本scriptInfo字段值正常" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;created&quot;:1584323286172,&quot;text&quot;:&quot;中心主题&quot;,&quot;calType&quot;:&quot;&quot;,&quot;scriptInfo&quot;:&quot;if(#测试1#==3){return AVERAGE}else if(#测试2#&gt;4){return (#测试4#+4)/2*3}else if(#测试4#&gt;5){return  -10}else if(#测试4#&gt;5){return  -1000}&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;created&quot;:1584338713678,&quot;text&quot;:&quot;测试1&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;value&quot;:&quot;4&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;created&quot;:1584338714994,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;,&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.1&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22}},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;created&quot;:1584349343341,&quot;text&quot;:&quot;测试4&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;value&quot;:&quot;7&quot;,&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;created&quot;:1584349350959,&quot;text&quot;:&quot;测试3&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;value&quot;:&quot;6&quot;,&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
                <stringProp name="HTTPArgument.content_type"></stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1906799105">&quot;msg&quot;:&quot;No enum constant hy.hm.valuationtree.entity.enums.CalType.&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.中心主题传入脚本语法异常#节点名称#，缺少##" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;created&quot;:1584323286172,&quot;text&quot;:&quot;中心主题&quot;,&quot;calType&quot;:&quot;SCRIPT&quot;,&quot;scriptInfo&quot;:&quot;if(测试1==3){return AVERAGE}else if(#测试2#&gt;4){return (#测试4#+4)/2*3}else if(#测试4#&gt;5){return  -10}else if(#测试4#&gt;5){return  -1000}&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;created&quot;:1584338713678,&quot;text&quot;:&quot;测试1&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;value&quot;:&quot;4&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;created&quot;:1584338714994,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;,&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.1&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22}},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;created&quot;:1584349343341,&quot;text&quot;:&quot;测试4&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;value&quot;:&quot;7&quot;,&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;created&quot;:1584349350959,&quot;text&quot;:&quot;测试3&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;value&quot;:&quot;6&quot;,&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1468039072">&quot;msg&quot;:&quot;中心主题节点,脚本错误！&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="6.1.中心主题传入语法异常#节点位置#，节点位置前后少一个#（注意看前端处理）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;created&quot;:1584323286172,&quot;text&quot;:&quot;中心主题&quot;,&quot;calType&quot;:&quot;SCRIPT&quot;,&quot;scriptInfo&quot;:&quot;if(1#!==3){return AVERAGE}else if(#2#&gt;4){return (#4#+4)/2*3}else if(#4#&gt;5){return  -10}else if(#3#&gt;5){return  -1000}&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;created&quot;:1584338713678,&quot;text&quot;:&quot;测试1&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;value&quot;:&quot;4&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;created&quot;:1584338714994,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;,&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.1&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22}},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;created&quot;:1584349343341,&quot;text&quot;:&quot;测试4&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;value&quot;:&quot;7&quot;,&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;created&quot;:1584349350959,&quot;text&quot;:&quot;测试3&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;value&quot;:&quot;6&quot;,&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="67791722">&quot;code&quot;:1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="7.中心主题传入语法异常#节点名称#，缺少名称" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;created&quot;:1584323286172,&quot;text&quot;:&quot;中心主题&quot;,&quot;calType&quot;:&quot;SCRIPT&quot;,&quot;scriptInfo&quot;:&quot;if(#测试1#==3){return AVERAGE}else if(#测试2#&gt;4){return (#测试4#+4)/2*3}else if(#测试4#&gt;5){return  -10}else if(##&gt;5){return  -1000}&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;created&quot;:1584338713678,&quot;text&quot;:&quot;测试1&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;value&quot;:&quot;4&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;created&quot;:1584338714994,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;,&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.1&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22}},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;created&quot;:1584349343341,&quot;text&quot;:&quot;测试4&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;value&quot;:&quot;7&quot;,&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;created&quot;:1584349350959,&quot;text&quot;:&quot;测试3&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;value&quot;:&quot;6&quot;,&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1689905678">&quot;msg&quot;:&quot;中心主题节点脚本中 ##节点找不到&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8.中心主题传入语法异常缺少else if 之前缺少空格" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;created&quot;:1584323286172,&quot;text&quot;:&quot;中心主题&quot;,&quot;calType&quot;:&quot;SCRIPT&quot;,&quot;scriptInfo&quot;:&quot;if(AVERAGE==3){return AVERAGE}else if(#测试2#&gt;4){return (#测试4#+4)/2*3}elseif(#测试4#&gt;5){return  -10}else if(#测试4#&gt;5){return  -1000}&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;created&quot;:1584338713678,&quot;text&quot;:&quot;测试1&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;value&quot;:&quot;4&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;created&quot;:1584338714994,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;,&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.1&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22}},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;created&quot;:1584349343341,&quot;text&quot;:&quot;测试4&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;value&quot;:&quot;7&quot;,&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;created&quot;:1584349350959,&quot;text&quot;:&quot;测试3&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;value&quot;:&quot;6&quot;,&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-758533492">,&quot;msg&quot;:&quot;中心主题节点,脚本错误！&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="9.中心主题传入语法异常return和结果缺少空格" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;created&quot;:1584323286172,&quot;text&quot;:&quot;中心主题&quot;,&quot;calType&quot;:&quot;SCRIPT&quot;,&quot;scriptInfo&quot;:&quot;if(AVERAGE==3){returnAVERAGE}else if(#测试2#&gt;4){return (#测试4#+4)/2*3}else if(#测试4#&gt;5){return  -10}else if(#测试4#&gt;5){return  -1000}&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;created&quot;:1584338713678,&quot;text&quot;:&quot;测试1&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;value&quot;:&quot;4&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;created&quot;:1584338714994,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;,&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.1&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22}},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;created&quot;:1584349343341,&quot;text&quot;:&quot;测试4&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;value&quot;:&quot;7&quot;,&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;created&quot;:1584349350959,&quot;text&quot;:&quot;测试3&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;value&quot;:&quot;6&quot;,&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1468039072">&quot;msg&quot;:&quot;中心主题节点,脚本错误！&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="10.中心主题传入语法异常else if 写成else" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;created&quot;:1584323286172,&quot;text&quot;:&quot;中心主题&quot;,&quot;calType&quot;:&quot;SCRIPT&quot;,&quot;scriptInfo&quot;:&quot;if(AVERAGE==3){return AVERAGE}else if(#测试2#&gt;4){return (#测试4#+4)/2*3}else (#测试4#&gt;5){return  -10}else if(#测试4#&gt;5){return  -1000}&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;created&quot;:1584338713678,&quot;text&quot;:&quot;测试1&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;value&quot;:&quot;4&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;created&quot;:1584338714994,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;,&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.1&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22}},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;created&quot;:1584349343341,&quot;text&quot;:&quot;测试4&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;value&quot;:&quot;7&quot;,&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;created&quot;:1584349350959,&quot;text&quot;:&quot;测试3&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;value&quot;:&quot;6&quot;,&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1468039072">&quot;msg&quot;:&quot;中心主题节点,脚本错误！&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="11.中心主题传入语法异常if 写成IF" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;created&quot;:1584323286172,&quot;text&quot;:&quot;中心主题&quot;,&quot;calType&quot;:&quot;SCRIPT&quot;,&quot;scriptInfo&quot;:&quot;IF(AVERAGE==3){return AVERAGE}else if(#测试2#&gt;4){return (#测试4#+4)/2*3}else if (#测试4#&gt;5){return  -10}else if(#测试4#&gt;5){return  -1000}&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;created&quot;:1584338713678,&quot;text&quot;:&quot;测试1&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;value&quot;:&quot;4&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;created&quot;:1584338714994,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;,&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.1&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22}},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;created&quot;:1584349343341,&quot;text&quot;:&quot;测试4&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;value&quot;:&quot;7&quot;,&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;created&quot;:1584349350959,&quot;text&quot;:&quot;测试3&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;value&quot;:&quot;6&quot;,&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1468039072">&quot;msg&quot;:&quot;中心主题节点,脚本错误！&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="12.中心主题传入脚本其它语法比如少括号，引号等" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;created&quot;:1584323286172,&quot;text&quot;:&quot;中心主题&quot;,&quot;calType&quot;:&quot;SCRIPT&quot;,&quot;scriptInfo&quot;:&quot;if(AVERAGE==3){return AVERAGE}else if(#测试2#&gt;4){return (#测试4#+4)/2*3}else if (#测试4#&gt;5){return  -10}else if(#测试4#&gt;5){return  -1000}&quot;,&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;created&quot;:1584338713678,&quot;text&quot;:&quot;测试1&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;value&quot;:&quot;4&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;created&quot;:1584338714994,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;,&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.1&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22}},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;created&quot;:1584349343341,&quot;text&quot;:&quot;测试4&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;value&quot;:&quot;7&quot;,&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;created&quot;:1584349350959,&quot;text&quot;:&quot;测试3&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;value&quot;:&quot;6&quot;,&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-679792716">&quot;msg&quot;:&quot;传入节点树格式错误！&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="13.中心主题传入脚本中有节点名称不存在" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;created&quot;:1584323286172,&quot;text&quot;:&quot;中心主题&quot;,&quot;calType&quot;:&quot;SCRIPT&quot;,&quot;scriptInfo&quot;:&quot;if(AVERAGE==3){return AVERAGE}else if(#测试2#&gt;4){return (#测试6#+4)/2*3}else if (#测试4#&gt;5){return  -10}else if(#测试4#&gt;5){return  -1000}&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;created&quot;:1584338713678,&quot;text&quot;:&quot;测试1&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;value&quot;:&quot;4&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;created&quot;:1584338714994,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;,&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.1&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22}},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;created&quot;:1584349343341,&quot;text&quot;:&quot;测试4&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;value&quot;:&quot;7&quot;,&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;created&quot;:1584349350959,&quot;text&quot;:&quot;测试3&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;value&quot;:&quot;6&quot;,&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="254106712">&quot;msg&quot;:&quot;中心主题节点脚本中 #测试6#节点找不到&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="14.中心主题传入脚本中有同一父节点名称重复存在(接口取第一个参与计算)" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;created&quot;:1584323286172,&quot;text&quot;:&quot;中心主题&quot;,&quot;calType&quot;:&quot;SCRIPT&quot;,&quot;scriptInfo&quot;:&quot;if(#测试1#!=3){return AVERAGE}else if(#测试2#&gt;4){return (#测试4#+4)/2*3}else if(#测试4#&gt;5){return  -10}else if(#测试4#&gt;5){return  -1000}&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;created&quot;:1584338713678,&quot;text&quot;:&quot;测试1&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;value&quot;:&quot;4&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;created&quot;:1584338714994,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;,&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.1&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22}},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;created&quot;:1584349343341,&quot;text&quot;:&quot;测试4&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;value&quot;:&quot;7&quot;,&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;created&quot;:1584349350959,&quot;text&quot;:&quot;测试4&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;value&quot;:&quot;6&quot;,&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1620463680">心主题节点计算后得出的值为：5.5</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="15.中心主题传入脚本内容为空" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;created&quot;:1584323286172,&quot;text&quot;:&quot;中心主题&quot;,&quot;calType&quot;:&quot;SCRIPT&quot;,&quot;scriptInfo&quot;:&quot;&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;created&quot;:1584338713678,&quot;text&quot;:&quot;测试1&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;value&quot;:&quot;4&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;created&quot;:1584338714994,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;,&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.1&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22}},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;created&quot;:1584349343341,&quot;text&quot;:&quot;测试4&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;value&quot;:&quot;7&quot;,&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;created&quot;:1584349350959,&quot;text&quot;:&quot;测试3&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;value&quot;:&quot;6&quot;,&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1468039072">&quot;msg&quot;:&quot;中心主题节点,脚本错误！&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="16.中心主题传入脚本正常，走if成功，子节点为非常规（接口不做区分最后节点计算方式，现在也正常处理）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;created&quot;:1584323286172,&quot;text&quot;:&quot;中心主题&quot;,&quot;calType&quot;:&quot;SCRIPT&quot;,&quot;scriptInfo&quot;:&quot;if(#测试1#!=3){return AVERAGE}else if(#测试2#&gt;4){return (#测试4#+4)/2*3}else if(#测试4#&gt;5){return  -10}else if(#测试4#&gt;5){return  -1000}&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;created&quot;:1584338713678,&quot;text&quot;:&quot;测试1&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;value&quot;:&quot;4&quot;,&quot;calType&quot;:&quot;WEIGHT&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;created&quot;:1584338714994,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;,&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.1&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22},&quot;calType&quot;:&quot;WEIGHT&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;created&quot;:1584349343341,&quot;text&quot;:&quot;测试4&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;value&quot;:&quot;7&quot;,&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;calType&quot;:&quot;WEIGHT&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;created&quot;:1584349350959,&quot;text&quot;:&quot;测试3&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;value&quot;:&quot;6&quot;,&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;calType&quot;:&quot;WEIGHT&quot;},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1611407053">中心主题节点计算后得出的值为：5.5</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="17..中心主题传入脚本正常，子节点1的值为空（接口不做判断，值为空当0处理）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;created&quot;:1584323286172,&quot;text&quot;:&quot;中心主题&quot;,&quot;calType&quot;:&quot;SCRIPT&quot;,&quot;scriptInfo&quot;:&quot;if(#测试1#!=3){return AVERAGE}else if(#测试2#&gt;4){return (#测试4#+4)/2*3}else if(#测试4#&gt;5){return  -10}else if(#测试4#&gt;5){return  -1000}&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;created&quot;:1584338713678,&quot;text&quot;:&quot;测试1&quot;,&quot;resource&quot;:[&quot;&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;created&quot;:1584338714994,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;,&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.1&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22}},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;created&quot;:1584349343341,&quot;text&quot;:&quot;测试4&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;value&quot;:&quot;7&quot;,&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;created&quot;:1584349350959,&quot;text&quot;:&quot;测试3&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;value&quot;:&quot;6&quot;,&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1611408014">中心主题节点计算后得出的值为：4.5</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="18.中心主题脚本正常，子节点1的内容删除但名称不在脚本里（接口也未做限制，在前端做限制）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;created&quot;:1584323286172,&quot;text&quot;:&quot;中心主题&quot;,&quot;calType&quot;:&quot;SCRIPT&quot;,&quot;scriptInfo&quot;:&quot;if(#测试2#!=3){return AVERAGE}else if(#测试2#&gt;4){return (#测试4#+4)/2*3}else if(#测试4#&gt;5){return  -10}else if(#测试4#&gt;5){return  -1000}&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;created&quot;:1584338713678,&quot;text&quot;:&quot;&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;value&quot;:&quot;4&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;created&quot;:1584338714994,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;,&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.1&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22}},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;created&quot;:1584349343341,&quot;text&quot;:&quot;测试4&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;value&quot;:&quot;7&quot;,&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;created&quot;:1584349350959,&quot;text&quot;:&quot;测试3&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;value&quot;:&quot;6&quot;,&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1611407053">中心主题节点计算后得出的值为：5.5</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="19.中心主题脚本正常，子节点1的值不为数值，报错提示" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;created&quot;:1584323286172,&quot;text&quot;:&quot;中心主题&quot;,&quot;calType&quot;:&quot;SCRIPT&quot;,&quot;scriptInfo&quot;:&quot;if(#测试1#!=3){return AVERAGE}else if(#测试2#&gt;4){return (#测试4#+4)/2*3}else if(#测试4#&gt;5){return  -10}else if(#测试4#&gt;5){return  -1000}&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;created&quot;:1584338713678,&quot;text&quot;:&quot;&quot;,&quot;resource&quot;:[&quot;4a&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;value&quot;:&quot;4a&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;created&quot;:1584338714994,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;,&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.1&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22}},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;created&quot;:1584349343341,&quot;text&quot;:&quot;测试4&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;value&quot;:&quot;7&quot;,&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;created&quot;:1584349350959,&quot;text&quot;:&quot;测试3&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;value&quot;:&quot;6&quot;,&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-807149506">&quot;msg&quot;:&quot;节点未设置值&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="20.中心主题脚本正常，节点有数值为负数" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;created&quot;:1584323286172,&quot;text&quot;:&quot;中心主题&quot;,&quot;calType&quot;:&quot;SCRIPT&quot;,&quot;scriptInfo&quot;:&quot;if(#测试1#!=3){return AVERAGE}else if(#测试2#&gt;4){return (#测试4#+4)/2*3}else if(#测试4#&gt;5){return  -10}else if(#测试4#&gt;5){return  -1000}&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;created&quot;:1584338713678,&quot;text&quot;:&quot;测试1&quot;,&quot;resource&quot;:[&quot;-4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;value&quot;:&quot;-4&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;created&quot;:1584338714994,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;,&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.1&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22}},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;created&quot;:1584349343341,&quot;text&quot;:&quot;测试4&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;value&quot;:&quot;7&quot;,&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;created&quot;:1584349350959,&quot;text&quot;:&quot;测试3&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;value&quot;:&quot;6&quot;,&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1611408975">中心主题节点计算后得出的值为：3.5</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="21.中心主题节点为常规（不传入claType）,报错" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;created&quot;:1584323286172,&quot;text&quot;:&quot;中心主题&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;created&quot;:1584338713678,&quot;text&quot;:&quot;分支主题1&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.6&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;value&quot;:&quot;10&quot;,&quot;calType&quot;:&quot;WEIGHTS&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c3amuzasg0&quot;,&quot;created&quot;:1584344620761,&quot;text&quot;:&quot;1.1&quot;,&quot;value&quot;:&quot;10&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;calType&quot;:&quot;SUM&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c3xqt6bo00&quot;,&quot;created&quot;:1584346431734,&quot;text&quot;:&quot;1.2&quot;,&quot;value&quot;:&quot;10&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;calType&quot;:&quot;AVERAGE&quot;},&quot;children&quot;:[]}]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;created&quot;:1584338714994,&quot;text&quot;:&quot;分支主题2&quot;,&quot;value&quot;:&quot;10&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.4&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="235379179">&quot;msg&quot;:&quot;中心主题未传入calType&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="22.中心主题为常规（传入calType=‘’），报错" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;created&quot;:1584323286172,&quot;text&quot;:&quot;中心主题&quot;,&quot;calType&quot;:&quot;&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;created&quot;:1584338713678,&quot;text&quot;:&quot;分支主题1&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.6&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;value&quot;:&quot;10&quot;,&quot;calType&quot;:&quot;WEIGHTS&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c3amuzasg0&quot;,&quot;created&quot;:1584344620761,&quot;text&quot;:&quot;1.1&quot;,&quot;value&quot;:&quot;10&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;calType&quot;:&quot;SUM&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c3xqt6bo00&quot;,&quot;created&quot;:1584346431734,&quot;text&quot;:&quot;1.2&quot;,&quot;value&quot;:&quot;10&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;calType&quot;:&quot;AVERAGE&quot;},&quot;children&quot;:[]}]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;created&quot;:1584338714994,&quot;text&quot;:&quot;分支主题2&quot;,&quot;value&quot;:&quot;10&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.4&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1906799105">&quot;msg&quot;:&quot;No enum constant hy.hm.valuationtree.entity.enums.CalType.&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="23.中间节点为常规（传入calType=‘NORMAL’）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;calType&quot;:&quot;WEIGHTS&quot;,&quot;resource&quot;:[&quot;0.0&quot;],&quot;functionalSelection&quot;:&quot;weights&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584582611553,&quot;id&quot;:&quot;c1efnmbkhr40&quot;,&quot;text&quot;:&quot;中心主题&quot;,&quot;value&quot;:&quot;0.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;&quot;],&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584582781044,&quot;weight&quot;:&quot;0.5&quot;,&quot;id&quot;:&quot;c1efps6n5sw0&quot;,&quot;text&quot;:&quot;测试1&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1egc9wj8s80&quot;,&quot;created&quot;:1584584543627,&quot;text&quot;:&quot;1.1&quot;,&quot;value&quot;:&quot;10&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;calType&quot;:&quot;NORMAL&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1egcdla98g0&quot;,&quot;created&quot;:1584584551654,&quot;text&quot;:&quot;1.2&quot;,&quot;value&quot;:&quot;20&quot;,&quot;resource&quot;:[&quot;20&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;},&quot;children&quot;:[]}]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1egcey2kqo0&quot;,&quot;created&quot;:1584584554604,&quot;text&quot;:&quot;测试2&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:525,&quot;y&quot;:130},&quot;resource&quot;:[&quot;&quot;],&quot;calType&quot;:&quot;NORMAL&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1229407558">&quot;msg&quot;:&quot;No enum constant hy.hm.valuationtree.entity.enums.CalType.NORMAL&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="24.中心主题为脚本  子节点有权重，脚本，函数，常规" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;calType&quot;:&quot;SCRIPT&quot;,&quot;resource&quot;:[&quot;24.0&quot;],&quot;functionalSelection&quot;:&quot;script&quot;,&quot;scriptInfo&quot;:&quot;if(#测试1#!=0){return #测试2#}else if(#测试2#&gt;4){return MIN+4}&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584590061977,&quot;id&quot;:&quot;c1eiaozyg600&quot;,&quot;text&quot;:&quot;中心主题&quot;,&quot;value&quot;:&quot;24.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;WEIGHTS&quot;,&quot;resource&quot;:[&quot;28.0&quot;],&quot;functionalSelection&quot;:&quot;weights&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584590064661,&quot;weight&quot;:&quot;0.5&quot;,&quot;id&quot;:&quot;c1eiaq8cl6g0&quot;,&quot;text&quot;:&quot;测试1&quot;,&quot;value&quot;:&quot;28.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;SCRIPT&quot;,&quot;scriptInfo&quot;:&quot;if(#1.1.1#-3&lt;0){return MAX+3}else if(#1.1.2#&gt;4){return MIN+4}&quot;,&quot;resource&quot;:[&quot;40.0&quot;],&quot;functionalSelection&quot;:&quot;function&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584590074210,&quot;weight&quot;:&quot;0.7&quot;,&quot;id&quot;:&quot;c1eiaum9skw0&quot;,&quot;text&quot;:&quot;1.1&quot;,&quot;value&quot;:&quot;40.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590079013,&quot;id&quot;:&quot;c1eiawtowxk0&quot;,&quot;text&quot;:&quot;1.1.1&quot;,&quot;value&quot;:&quot;10&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;30&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590081158,&quot;id&quot;:&quot;c1eiaxt6gyw0&quot;,&quot;text&quot;:&quot;1.1.2&quot;,&quot;value&quot;:&quot;30&quot;},&quot;children&quot;:[]}]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;30&quot;],&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590075398,&quot;weight&quot;:&quot;0.3&quot;,&quot;id&quot;:&quot;c1eiav5wy7s0&quot;,&quot;text&quot;:&quot;1.2&quot;,&quot;value&quot;:&quot;30&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;},&quot;children&quot;:[]}]},{&quot;data&quot;:{&quot;calType&quot;:&quot;SUM&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:589,&quot;y&quot;:195},&quot;resource&quot;:[&quot;20.0&quot;],&quot;functionalSelection&quot;:&quot;function&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584590070602,&quot;weight&quot;:&quot;0.5&quot;,&quot;id&quot;:&quot;c1eiasylp400&quot;,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;20.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590108419,&quot;id&quot;:&quot;c1eibac0p000&quot;,&quot;text&quot;:&quot;2.1&quot;,&quot;value&quot;:&quot;10&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590110677,&quot;id&quot;:&quot;c1eibbdd7y80&quot;,&quot;text&quot;:&quot;2.2&quot;,&quot;value&quot;:&quot;10&quot;},&quot;children&quot;:[]}]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">子节点测试1，测试2；测试1子节点1.1，1.2  ，2.1，2.2，1.1.1，1.1.2 ；加权的子节点权重和为1</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1585901289">中心主题节点计算后得出的值为：20.0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="25.中心主题为加权  子节点和子子节点有脚本，加权，函数，常规" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;calType&quot;:&quot;WEIGHTS&quot;,&quot;resource&quot;:[&quot;24.0&quot;],&quot;functionalSelection&quot;:&quot;weights&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584590061977,&quot;id&quot;:&quot;c1eiaozyg600&quot;,&quot;text&quot;:&quot;中心主题&quot;,&quot;value&quot;:&quot;24.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;WEIGHTS&quot;,&quot;resource&quot;:[&quot;28.0&quot;],&quot;functionalSelection&quot;:&quot;weights&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584590064661,&quot;weight&quot;:&quot;0.5&quot;,&quot;id&quot;:&quot;c1eiaq8cl6g0&quot;,&quot;text&quot;:&quot;测试1&quot;,&quot;value&quot;:&quot;28.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;SCRIPT&quot;,scriptInfo:&quot;if(#1.1.1#-3&lt;0){return MAX+3}else if(#1.1.2#&gt;4){return MIN+4}&quot;,&quot;resource&quot;:[&quot;40.0&quot;],&quot;functionalSelection&quot;:&quot;function&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584590074210,&quot;weight&quot;:&quot;0.7&quot;,&quot;id&quot;:&quot;c1eiaum9skw0&quot;,&quot;text&quot;:&quot;1.1&quot;,&quot;value&quot;:&quot;40.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590079013,&quot;id&quot;:&quot;c1eiawtowxk0&quot;,&quot;text&quot;:&quot;1.1.1&quot;,&quot;value&quot;:&quot;10&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;30&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590081158,&quot;id&quot;:&quot;c1eiaxt6gyw0&quot;,&quot;text&quot;:&quot;1.1.2&quot;,&quot;value&quot;:&quot;30&quot;},&quot;children&quot;:[]}]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;30&quot;],&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590075398,&quot;weight&quot;:&quot;0.3&quot;,&quot;id&quot;:&quot;c1eiav5wy7s0&quot;,&quot;text&quot;:&quot;1.2&quot;,&quot;value&quot;:&quot;30&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;},&quot;children&quot;:[]}]},{&quot;data&quot;:{&quot;calType&quot;:&quot;SUM&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:589,&quot;y&quot;:195},&quot;resource&quot;:[&quot;20.0&quot;],&quot;functionalSelection&quot;:&quot;function&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584590070602,&quot;weight&quot;:&quot;0.5&quot;,&quot;id&quot;:&quot;c1eiasylp400&quot;,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;20.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590108419,&quot;id&quot;:&quot;c1eibac0p000&quot;,&quot;text&quot;:&quot;2.1&quot;,&quot;value&quot;:&quot;10&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590110677,&quot;id&quot;:&quot;c1eibbdd7y80&quot;,&quot;text&quot;:&quot;2.2&quot;,&quot;value&quot;:&quot;10&quot;},&quot;children&quot;:[]}]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1917644484">中心主题节点计算后得出的值为：19.4;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="26.中心主题为加权  子节点有常规，权重子节点分配和&gt;1" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;created&quot;:1584323286172,&quot;text&quot;:&quot;中心主题&quot;,&quot;calType&quot;:&quot;WEIGHTS&quot;,&quot;resource&quot;:[&quot;&quot;],&quot;functionalSelection&quot;:&quot;weights&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;created&quot;:1584338713678,&quot;text&quot;:&quot;测试1&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.6&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;value&quot;:&quot;4&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;created&quot;:1584338714994,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;,&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.1&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22}},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;created&quot;:1584349343341,&quot;text&quot;:&quot;测试4&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;value&quot;:&quot;7&quot;,&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;calType&quot;:&quot;NORMAL&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;created&quot;:1584349350959,&quot;text&quot;:&quot;测试3&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;value&quot;:&quot;6&quot;,&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">子节点测试1，测试2；测试1子节点1.1，1.2  ，2.1，2.2，1.1.1，1.1.2 </stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1632745963">msg&quot;:&quot;中心主题下节点权重值之和不为1&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="27.中心主题为加权  子节点有常规，权重值存在非数值" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;calType&quot;:&quot;WEIGHTS&quot;,&quot;resource&quot;:[&quot;5.1&quot;],&quot;functionalSelection&quot;:&quot;weights&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584323286172,&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;text&quot;:&quot;中心主题&quot;,&quot;value&quot;:&quot;5.1&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584338713678,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.5a&quot;,&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;text&quot;:&quot;测试1&quot;,&quot;value&quot;:&quot;4&quot;,&quot;calType&quot;:&quot;NORMAL&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22},&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584338714994,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.1&quot;,&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584349343341,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.2&quot;,&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;text&quot;:&quot;测试4&quot;,&quot;value&quot;:&quot;7&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584349350959,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.2&quot;,&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;text&quot;:&quot;测试3&quot;,&quot;value&quot;:&quot;6&quot;},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-914052843">msg&quot;:&quot;测试1节点未设置权重值&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="28.中心主题为加权  子节点有常规，权重值存在一个为空，但总和=1" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;calType&quot;:&quot;WEIGHTS&quot;,&quot;resource&quot;:[&quot;5.1&quot;],&quot;functionalSelection&quot;:&quot;weights&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584323286172,&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;text&quot;:&quot;中心主题&quot;,&quot;value&quot;:&quot;5.1&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584338713678,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;text&quot;:&quot;测试1&quot;,&quot;value&quot;:&quot;4&quot;,&quot;calType&quot;:&quot;NORMAL&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22},&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584338714994,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.1&quot;,&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584349343341,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.7&quot;,&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;text&quot;:&quot;测试4&quot;,&quot;value&quot;:&quot;7&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584349350959,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.2&quot;,&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;text&quot;:&quot;测试3&quot;,&quot;value&quot;:&quot;6&quot;},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1611406091">中心主题节点计算后得出的值为：6.6</stringProp>
              <stringProp name="-1376434230">&quot;msg&quot;:&quot;success&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="29.中心主题为加权  子节点有常规，权重值存在负数，总和=1" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;calType&quot;:&quot;WEIGHTS&quot;,&quot;resource&quot;:[&quot;6.6&quot;],&quot;functionalSelection&quot;:&quot;weights&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584323286172,&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;text&quot;:&quot;中心主题&quot;,&quot;value&quot;:&quot;6.6&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584338713678,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;text&quot;:&quot;测试1&quot;,&quot;value&quot;:&quot;4&quot;,&quot;weight&quot;:&quot;-0.1&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22},&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584338714994,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.1&quot;,&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584349343341,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.8&quot;,&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;text&quot;:&quot;测试4&quot;,&quot;value&quot;:&quot;7&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584349350959,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.2&quot;,&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;text&quot;:&quot;测试3&quot;,&quot;value&quot;:&quot;6&quot;},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1586018883">中心主题节点计算后得出的值为：6.9;</stringProp>
              <stringProp name="-1376434230">&quot;msg&quot;:&quot;success&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="30.中心主题为加权  子节点有常规，权重子节点分配和&lt;1" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;calType&quot;:&quot;WEIGHTS&quot;,&quot;resource&quot;:[&quot;6.9&quot;],&quot;functionalSelection&quot;:&quot;weights&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584323286172,&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;text&quot;:&quot;中心主题&quot;,&quot;value&quot;:&quot;6.9&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584338713678,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.1&quot;,&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;text&quot;:&quot;测试1&quot;,&quot;value&quot;:&quot;4&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22},&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584338714994,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.1&quot;,&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584349343341,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.5&quot;,&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;text&quot;:&quot;测试4&quot;,&quot;value&quot;:&quot;7&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584349350959,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.2&quot;,&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;text&quot;:&quot;测试3&quot;,&quot;value&quot;:&quot;6&quot;},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">子节点测试1，测试2；测试1子节点1.1，1.2  ，2.1，2.2，1.1.1，1.1.2 </stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1005065357">&quot;msg&quot;:&quot;中心主题下节点权重值之和不为1&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="31.中心主题为函数MIN  子节点为常规" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;calType&quot;:&quot;MIN&quot;,&quot;resource&quot;:[&quot;22.0&quot;],&quot;functionalSelection&quot;:&quot;function&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584323286172,&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;text&quot;:&quot;中心主题&quot;,&quot;value&quot;:&quot;22.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584338713678,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.1&quot;,&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;text&quot;:&quot;测试1&quot;,&quot;value&quot;:&quot;4&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22},&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584338714994,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.1&quot;,&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584349343341,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.5&quot;,&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;text&quot;:&quot;测试4&quot;,&quot;value&quot;:&quot;7&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584349350959,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.2&quot;,&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;text&quot;:&quot;测试3&quot;,&quot;value&quot;:&quot;6&quot;},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1611408019">中心主题节点计算后得出的值为：4.0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="32.中心主题为函数MAX  子节点为常规" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;calType&quot;:&quot;MAX&quot;,&quot;resource&quot;:[&quot;4.0&quot;],&quot;functionalSelection&quot;:&quot;function&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584323286172,&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;text&quot;:&quot;中心主题&quot;,&quot;value&quot;:&quot;4.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584338713678,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.1&quot;,&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;text&quot;:&quot;测试1&quot;,&quot;value&quot;:&quot;4&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22},&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584338714994,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.1&quot;,&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584349343341,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.5&quot;,&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;text&quot;:&quot;测试4&quot;,&quot;value&quot;:&quot;7&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584349350959,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.2&quot;,&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;text&quot;:&quot;测试3&quot;,&quot;value&quot;:&quot;6&quot;},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1611405136">中心主题节点计算后得出的值为：7.0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="33.中心主题为函数AVERAGE  子节点为常规" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;calType&quot;:&quot;AVERAGE&quot;,&quot;resource&quot;:[&quot;7.0&quot;],&quot;functionalSelection&quot;:&quot;function&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584323286172,&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;text&quot;:&quot;中心主题&quot;,&quot;value&quot;:&quot;7.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584338713678,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.1&quot;,&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;text&quot;:&quot;测试1&quot;,&quot;value&quot;:&quot;4&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22},&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584338714994,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.1&quot;,&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584349343341,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.5&quot;,&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;text&quot;:&quot;测试4&quot;,&quot;value&quot;:&quot;7&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584349350959,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.2&quot;,&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;text&quot;:&quot;测试3&quot;,&quot;value&quot;:&quot;6&quot;},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1611407053">中心主题节点计算后得出的值为：5.5</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="34.中心主题为函数SUM  子节点为常规" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;calType&quot;:&quot;SUM&quot;,&quot;resource&quot;:[&quot;6.9&quot;],&quot;functionalSelection&quot;:&quot;function&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584323286172,&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;text&quot;:&quot;中心主题&quot;,&quot;value&quot;:&quot;6.9&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584338713678,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.1&quot;,&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;text&quot;:&quot;测试1&quot;,&quot;value&quot;:&quot;4&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22},&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584338714994,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.1&quot;,&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;,&quot;calType&quot;:&quot;NORMAL&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584349343341,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.5&quot;,&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;text&quot;:&quot;测试4&quot;,&quot;value&quot;:&quot;7&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584349350959,&quot;reject&quot;:false,&quot;uselessWeight&quot;:false,&quot;weight&quot;:&quot;0.2&quot;,&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;text&quot;:&quot;测试3&quot;,&quot;value&quot;:&quot;6&quot;,&quot;calType&quot;:&quot;NORMAL&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1585903211">中心主题节点计算后得出的值为：22.0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="35.中心主题为函数MIN  子节点和子子节点存在脚本，函数，加权，常规" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;calType&quot;:&quot;MIN&quot;,&quot;resource&quot;:[&quot;24.0&quot;],&quot;functionalSelection&quot;:&quot;function&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584590061977,&quot;id&quot;:&quot;c1eiaozyg600&quot;,&quot;text&quot;:&quot;中心主题&quot;,&quot;value&quot;:&quot;24.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;WEIGHTS&quot;,&quot;resource&quot;:[&quot;28.0&quot;],&quot;functionalSelection&quot;:&quot;weights&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584590064661,&quot;weight&quot;:&quot;0.5&quot;,&quot;id&quot;:&quot;c1eiaq8cl6g0&quot;,&quot;text&quot;:&quot;测试1&quot;,&quot;value&quot;:&quot;28.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;SCRIPT&quot;,scriptInfo:&quot;if(#1.1.1#-3&lt;0){return MAX+3}else if(#1.1.2#&gt;4){return MIN+4}&quot;,&quot;resource&quot;:[&quot;40.0&quot;],&quot;functionalSelection&quot;:&quot;function&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584590074210,&quot;weight&quot;:&quot;0.7&quot;,&quot;id&quot;:&quot;c1eiaum9skw0&quot;,&quot;text&quot;:&quot;1.1&quot;,&quot;value&quot;:&quot;40.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590079013,&quot;id&quot;:&quot;c1eiawtowxk0&quot;,&quot;text&quot;:&quot;1.1.1&quot;,&quot;value&quot;:&quot;10&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;30&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590081158,&quot;id&quot;:&quot;c1eiaxt6gyw0&quot;,&quot;text&quot;:&quot;1.1.2&quot;,&quot;value&quot;:&quot;30&quot;},&quot;children&quot;:[]}]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;30&quot;],&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590075398,&quot;weight&quot;:&quot;0.3&quot;,&quot;id&quot;:&quot;c1eiav5wy7s0&quot;,&quot;text&quot;:&quot;1.2&quot;,&quot;value&quot;:&quot;30&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;},&quot;children&quot;:[]}]},{&quot;data&quot;:{&quot;calType&quot;:&quot;SUM&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:589,&quot;y&quot;:195},&quot;resource&quot;:[&quot;20.0&quot;],&quot;functionalSelection&quot;:&quot;function&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584590070602,&quot;weight&quot;:&quot;0.5&quot;,&quot;id&quot;:&quot;c1eiasylp400&quot;,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;20.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590108419,&quot;id&quot;:&quot;c1eibac0p000&quot;,&quot;text&quot;:&quot;2.1&quot;,&quot;value&quot;:&quot;10&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590110677,&quot;id&quot;:&quot;c1eibbdd7y80&quot;,&quot;text&quot;:&quot;2.2&quot;,&quot;value&quot;:&quot;10&quot;},&quot;children&quot;:[]}]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1917614817">中心主题节点计算后得出的值为：18.8;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="36.传入节点树的格式错误" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;calType&quot;:WEIGHTS,&quot;resource&quot;:[&quot;0.0&quot;],&quot;functionalSelection&quot;:&quot;weights&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584582611553,&quot;id&quot;:&quot;c1efnmbkhr40&quot;,&quot;text&quot;:&quot;中心主题&quot;,&quot;value&quot;:&quot;0.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;SUM&quot;,&quot;resource&quot;:[&quot;&quot;],&quot;functionalSelection&quot;:&quot;function&quot;,&quot;created&quot;:1584582781044,&quot;weight&quot;:&quot;0.5&quot;,&quot;id&quot;:&quot;c1efps6n5sw0&quot;,&quot;text&quot;:&quot;测试1&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1egc9wj8s80&quot;,&quot;created&quot;:1584584543627,&quot;text&quot;:&quot;1.1&quot;,&quot;value&quot;:&quot;10&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;calType&quot;:&quot;NORMAL&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1egcdla98g0&quot;,&quot;created&quot;:1584584551654,&quot;text&quot;:&quot;1.2&quot;,&quot;value&quot;:&quot;20&quot;,&quot;resource&quot;:[&quot;20&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;},&quot;children&quot;:[]}]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1egcey2kqo0&quot;,&quot;created&quot;:1584584554604,&quot;text&quot;:&quot;测试2&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:525,&quot;y&quot;:130},&quot;resource&quot;:[&quot;&quot;],&quot;calType&quot;:&quot;NORMAL&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-679792716">&quot;msg&quot;:&quot;传入节点树格式错误！&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="37.传入节点标题带有#" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;calType&quot;:&quot;WEIGHTS&quot;,&quot;resource&quot;:[&quot;24.0&quot;],&quot;functionalSelection&quot;:&quot;weights&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584590061977,&quot;id&quot;:&quot;c1eiaozyg600&quot;,&quot;text&quot;:&quot;中心主题&quot;,&quot;value&quot;:&quot;24.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;WEIGHTS&quot;,&quot;resource&quot;:[&quot;28.0&quot;],&quot;functionalSelection&quot;:&quot;weights&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584590064661,&quot;weight&quot;:&quot;0.5&quot;,&quot;id&quot;:&quot;c1eiaq8cl6g0&quot;,&quot;text&quot;:&quot;测试1&quot;,&quot;value&quot;:&quot;28.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;SCRIPT&quot;,scriptInfo:&quot;if(#1.1.1##-3&lt;0){return MAX+3}else if(#1.1.2#&gt;4){return MIN+4}&quot;,&quot;resource&quot;:[&quot;40.0&quot;],&quot;functionalSelection&quot;:&quot;function&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584590074210,&quot;weight&quot;:&quot;0.7&quot;,&quot;id&quot;:&quot;c1eiaum9skw0&quot;,&quot;text&quot;:&quot;1.1&quot;,&quot;value&quot;:&quot;40.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590079013,&quot;id&quot;:&quot;c1eiawtowxk0&quot;,&quot;text&quot;:&quot;1.1.1#&quot;,&quot;value&quot;:&quot;10&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;30&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590081158,&quot;id&quot;:&quot;c1eiaxt6gyw0&quot;,&quot;text&quot;:&quot;1.1.2&quot;,&quot;value&quot;:&quot;30&quot;},&quot;children&quot;:[]}]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;30&quot;],&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590075398,&quot;weight&quot;:&quot;0.3&quot;,&quot;id&quot;:&quot;c1eiav5wy7s0&quot;,&quot;text&quot;:&quot;1.2&quot;,&quot;value&quot;:&quot;30&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;},&quot;children&quot;:[]}]},{&quot;data&quot;:{&quot;calType&quot;:&quot;SUM&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:589,&quot;y&quot;:195},&quot;resource&quot;:[&quot;20.0&quot;],&quot;functionalSelection&quot;:&quot;function&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584590070602,&quot;weight&quot;:&quot;0.5&quot;,&quot;id&quot;:&quot;c1eiasylp400&quot;,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;20.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590108419,&quot;id&quot;:&quot;c1eibac0p000&quot;,&quot;text&quot;:&quot;2.1&quot;,&quot;value&quot;:&quot;10&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590110677,&quot;id&quot;:&quot;c1eibbdd7y80&quot;,&quot;text&quot;:&quot;2.2&quot;,&quot;value&quot;:&quot;10&quot;},&quot;children&quot;:[]}]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-977718878">&quot;msg&quot;:&quot;1.1节点脚本中 #1.1.1#节点找不到&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="38.传入节点标题带有{}等特殊字符" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">&#xffff;﻿[{&quot;data&quot;:{&quot;calType&quot;:&quot;SUM&quot;,&quot;resource&quot;:[&quot;40.0&quot;],&quot;functionalSelection&quot;:&quot;function&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584590074210,&quot;weight&quot;:&quot;0.7&quot;,&quot;id&quot;:&quot;c1eiaum9skw0&quot;,&quot;text&quot;:&quot;1.1&quot;,&quot;value&quot;:&quot;40.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590079013,&quot;id&quot;:&quot;c1eiawtowxk0&quot;,&quot;text&quot;:&quot;1.1.1&quot;,&quot;value&quot;:&quot;10&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;30&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590081158,&quot;id&quot;:&quot;c1eiaxt6gyw0&quot;,&quot;text&quot;:&quot;1.1.2&quot;,&quot;value&quot;:&quot;30&quot;},&quot;children&quot;:[]}]}]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-679792716">&quot;msg&quot;:&quot;传入节点树格式错误！&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="39.传入的值都不符合脚本里的判断，则返回语法错误" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;calType&quot;:&quot;SCRIPT&quot;,&quot;resource&quot;:[&quot;24.0&quot;],&quot;functionalSelection&quot;:&quot;script&quot;,&quot;scriptInfo&quot;:&quot;if (#测试1# == 0){return #测试2#}else if(#测试2#&lt;4) { return MIN+4}&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584590061977,&quot;id&quot;:&quot;c1eiaozyg600&quot;,&quot;text&quot;:&quot;中心主题&quot;,&quot;value&quot;:&quot;24.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;WEIGHTS&quot;,&quot;resource&quot;:[&quot;28.0&quot;],&quot;functionalSelection&quot;:&quot;weights&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584590064661,&quot;weight&quot;:&quot;0.5&quot;,&quot;id&quot;:&quot;c1eiaq8cl6g0&quot;,&quot;text&quot;:&quot;测试1&quot;,&quot;value&quot;:&quot;28.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;SCRIPT&quot;,&quot;scriptInfo&quot;:&quot;if(#1.1.1#-3&lt;0){return MAX+3}else if(#1.1.2#&gt;4){return MIN+4}&quot;,&quot;resource&quot;:[&quot;40.0&quot;],&quot;functionalSelection&quot;:&quot;function&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584590074210,&quot;weight&quot;:&quot;0.7&quot;,&quot;id&quot;:&quot;c1eiaum9skw0&quot;,&quot;text&quot;:&quot;1.1&quot;,&quot;value&quot;:&quot;40.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590079013,&quot;id&quot;:&quot;c1eiawtowxk0&quot;,&quot;text&quot;:&quot;1.1.1&quot;,&quot;value&quot;:&quot;10&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;30&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590081158,&quot;id&quot;:&quot;c1eiaxt6gyw0&quot;,&quot;text&quot;:&quot;1.1.2&quot;,&quot;value&quot;:&quot;30&quot;},&quot;children&quot;:[]}]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;30&quot;],&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590075398,&quot;weight&quot;:&quot;0.3&quot;,&quot;id&quot;:&quot;c1eiav5wy7s0&quot;,&quot;text&quot;:&quot;1.2&quot;,&quot;value&quot;:&quot;30&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;},&quot;children&quot;:[]}]},{&quot;data&quot;:{&quot;calType&quot;:&quot;SUM&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:589,&quot;y&quot;:195},&quot;resource&quot;:[&quot;20.0&quot;],&quot;functionalSelection&quot;:&quot;function&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584590070602,&quot;weight&quot;:&quot;0.5&quot;,&quot;id&quot;:&quot;c1eiasylp400&quot;,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;20.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590108419,&quot;id&quot;:&quot;c1eibac0p000&quot;,&quot;text&quot;:&quot;2.1&quot;,&quot;value&quot;:&quot;10&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584590110677,&quot;id&quot;:&quot;c1eibbdd7y80&quot;,&quot;text&quot;:&quot;2.2&quot;,&quot;value&quot;:&quot;10&quot;},&quot;children&quot;:[]}]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1468039072">&quot;msg&quot;:&quot;中心主题节点,脚本错误！&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="40.中心主题的计算总值看四舍五入（后面值为5临界值需要进）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;calType&quot;:&quot;WEIGHTS&quot;,&quot;resource&quot;:[&quot;24.27&quot;],&quot;functionalSelection&quot;:&quot;weights&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584675300014,&quot;id&quot;:&quot;c1fciet8p280&quot;,&quot;text&quot;:&quot;中心主题&quot;,&quot;value&quot;:&quot;24.27&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;WEIGHTS&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:124,&quot;y&quot;:208},&quot;resource&quot;:[&quot;18.0&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;weights&quot;,&quot;created&quot;:1584925763027,&quot;weight&quot;:&quot;0.5&quot;,&quot;id&quot;:&quot;c1htajxjyrk0&quot;,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;18.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;WEIGHTS&quot;,&quot;resource&quot;:[&quot;18.0&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;weights&quot;,&quot;created&quot;:1584932630262,&quot;weight&quot;:&quot;1&quot;,&quot;id&quot;:&quot;c1hvq6p2di00&quot;,&quot;text&quot;:&quot;2.2&quot;,&quot;value&quot;:&quot;18.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;18&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584932636944,&quot;weight&quot;:&quot;1&quot;,&quot;id&quot;:&quot;c1hvq9rkr740&quot;,&quot;text&quot;:&quot;分支主题&quot;,&quot;value&quot;:&quot;18&quot;},&quot;children&quot;:[]}]}]},{&quot;data&quot;:{&quot;calType&quot;:&quot;SUM&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:653,&quot;y&quot;:-145},&quot;resource&quot;:[&quot;30.55&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;function&quot;,&quot;created&quot;:1584925857189,&quot;weight&quot;:&quot;0.5&quot;,&quot;id&quot;:&quot;c1htbr6tn280&quot;,&quot;text&quot;:&quot;测试1&quot;,&quot;value&quot;:&quot;30.55&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;MIN&quot;,&quot;resource&quot;:[&quot;10.0&quot;],&quot;functionalSelection&quot;:&quot;function&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584932628357,&quot;id&quot;:&quot;c1hvq5tkhaw0&quot;,&quot;text&quot;:&quot;1.1&quot;,&quot;value&quot;:&quot;10.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584932665481,&quot;id&quot;:&quot;c1hvqmvisjk0&quot;,&quot;text&quot;:&quot;1.1.1&quot;,&quot;value&quot;:&quot;10&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;20&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584932668044,&quot;id&quot;:&quot;c1hvqo1wp8g0&quot;,&quot;text&quot;:&quot;1.1.2&quot;,&quot;value&quot;:&quot;20&quot;},&quot;children&quot;:[]}]},{&quot;data&quot;:{&quot;calType&quot;:&quot;MAX&quot;,&quot;resource&quot;:[&quot;10.0&quot;],&quot;functionalSelection&quot;:&quot;function&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584932631811,&quot;id&quot;:&quot;c1hvq7eoouw0&quot;,&quot;text&quot;:&quot;2.1&quot;,&quot;value&quot;:&quot;10.0&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;10&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;created&quot;:1584932672708,&quot;id&quot;:&quot;c1hvqq71j7k0&quot;,&quot;text&quot;:&quot;2.2.2&quot;,&quot;value&quot;:&quot;10&quot;},&quot;children&quot;:[]}]},{&quot;data&quot;:{&quot;calType&quot;:&quot;NORMAL&quot;,&quot;resource&quot;:[&quot;10.55&quot;],&quot;functionalSelection&quot;:&quot;normal&quot;,&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;created&quot;:1584932633300,&quot;id&quot;:&quot;c1hvq83bamo0&quot;,&quot;text&quot;:&quot;2.3&quot;,&quot;value&quot;:&quot;10.55&quot;},&quot;children&quot;:[]}]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1918418985">中心主题节点计算后得出的值为：24.28</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="41.中心主题传入脚本,不同父节点下存在名称相同" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{&quot;root&quot;:{&quot;data&quot;:{&quot;id&quot;:&quot;c1bvqdvvvvk0&quot;,&quot;created&quot;:1584323286172,&quot;text&quot;:&quot;中心主题&quot;,&quot;calType&quot;:&quot;SCRIPT&quot;,&quot;scriptInfo&quot;:&quot;if(#测试1#!=3){return AVERAGE}else if(#测试2#&gt;4){return (#测试4#+4)/2*3}else if(#测试4#&gt;5){return  -10}else if(#测试4#&gt;5){return  -1000}&quot;},&quot;children&quot;:[{&quot;data&quot;:{&quot;id&quot;:&quot;c1c1796miz40&quot;,&quot;created&quot;:1584338713678,&quot;text&quot;:&quot;测试1&quot;,&quot;resource&quot;:[&quot;4&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.5&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;value&quot;:&quot;4&quot;},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c179seilk0&quot;,&quot;created&quot;:1584338714994,&quot;text&quot;:&quot;测试2&quot;,&quot;value&quot;:&quot;5&quot;,&quot;resource&quot;:[&quot;5&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.1&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false,&quot;layout_mind_offset&quot;:{&quot;x&quot;:0,&quot;y&quot;:22}},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4ywdtyu00&quot;,&quot;created&quot;:1584349343341,&quot;text&quot;:&quot;测试4&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:384},&quot;value&quot;:&quot;7&quot;,&quot;resource&quot;:[&quot;7&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]},{&quot;data&quot;:{&quot;id&quot;:&quot;c1c4yzvtk800&quot;,&quot;created&quot;:1584349350959,&quot;text&quot;:&quot;测试4&quot;,&quot;layout_mind_offset&quot;:{&quot;x&quot;:463,&quot;y&quot;:169},&quot;value&quot;:&quot;6&quot;,&quot;resource&quot;:[&quot;6&quot;],&quot;obtainValueType&quot;:&quot;direct&quot;,&quot;weight&quot;:&quot;0.2&quot;,&quot;uselessWeight&quot;:false,&quot;reject&quot;:false},&quot;children&quot;:[]}]},&quot;template&quot;:&quot;default&quot;,&quot;theme&quot;:&quot;fresh-blue&quot;,&quot;version&quot;:&quot;1.4.33&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1620463680">心主题节点计算后得出的值为：5.5</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="42.换算（正常传入区间）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[6,5)-(1)&quot;,&quot;[5,1)-(2)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;4&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;4&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1585899440">中心主题节点计算后得出的值为：2.0;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="43.换算（当前子节点不符合传入的区间）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[6,5)-(1)&quot;,&quot;[5,4)-(2)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;4&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;4&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2101543426">&quot;code&quot;:1,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="44.换算（当前传入的区间重复）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[10,5)-(1)&quot;,&quot;[6,4)-(2)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;4&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;4&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2101543426">&quot;code&quot;:1,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="45.换算（当前换算区间下有多个子节点）接口未限制注意前端需限制" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[6,5)-(1)&quot;,&quot;[5,1)-(2)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;4&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;4&quot;
			},
			&quot;children&quot;: []
		}, {
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;layout_mind_offset&quot;: {
					&quot;x&quot;: 0,
					&quot;y&quot;: 22
				},
				&quot;resource&quot;: [&quot;5&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338714994,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c179seilk0&quot;,
				&quot;text&quot;: &quot;测试2&quot;,
				&quot;value&quot;: &quot;5&quot;
			},
			&quot;children&quot;: []
		}, {
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;layout_mind_offset&quot;: {
					&quot;x&quot;: 463,
					&quot;y&quot;: 384
				},
				&quot;resource&quot;: [&quot;7&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584349343341,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.5&quot;,
				&quot;id&quot;: &quot;c1c4ywdtyu00&quot;,
				&quot;text&quot;: &quot;测试4&quot;,
				&quot;value&quot;: &quot;7&quot;
			},
			&quot;children&quot;: []
		}, {
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;layout_mind_offset&quot;: {
					&quot;x&quot;: 463,
					&quot;y&quot;: 169
				},
				&quot;resource&quot;: [&quot;6&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584349350959,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.2&quot;,
				&quot;id&quot;: &quot;c1c4yzvtk800&quot;,
				&quot;text&quot;: &quot;测试3&quot;,
				&quot;value&quot;: &quot;6&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2101543395">&quot;code&quot;:0,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="46.换算（区间和值之间写法错误）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[6,5)1&quot;,&quot;[5,4)-(2)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;4&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;4&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2101543426">&quot;code&quot;:1,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="47.换算（区间里转化值为空）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[6,5)-()&quot;,&quot;[5,4)-2&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;4&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;4&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2101543426">&quot;code&quot;:1,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="48.换算（区间里缺少前面值）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[,5)-(1)&quot;,&quot;[5,4)-(2)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;4&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;4&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2101543426">&quot;code&quot;:1,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="49.换算（区间里缺少后面值）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[6,5)-(1)&quot;,&quot;[5,)-(2)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;4&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;4&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2101543426">&quot;code&quot;:1,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="50.换算（区间里存在负数）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[6,5)-(1)&quot;,&quot;[5,-1)-(2)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;4&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;4&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="67791721">&quot;code&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="51.换算（区间里值存在负数）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[6,5)-(1)&quot;,&quot;[5,1)-(-2)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;4&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;4&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1376434230">&quot;msg&quot;:&quot;success&quot;</stringProp>
              <stringProp name="1585754256">中心主题节点计算后得出的值为：-2.0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="52.换算（区间里值存在小数）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[6,5)-(1)&quot;,&quot;[5,1)-(2.5555)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;4&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;4&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1376434230">&quot;msg&quot;:&quot;success&quot;</stringProp>
              <stringProp name="1585899590">中心主题节点计算后得出的值为：2.56</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="53.换算（区间里存在小数）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[6,3.9999999)-(1)&quot;,&quot;[3.9999999,1)-(2)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;4&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;4&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1376434230">&quot;msg&quot;:&quot;success&quot;</stringProp>
              <stringProp name="-1611410902">中心主题节点计算后得出的值为：1.0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="54.换算（区间里存在非数值）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[6,5)-(1)&quot;,&quot;[5a,1)-(2)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;4&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;4&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2101543426">&quot;code&quot;:1,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="55.换算（区间值存在非数值）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[6,5)-(1)&quot;,&quot;[5,1)-(2a)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;4&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;4&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2101543426">&quot;code&quot;:1,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="56.换算（区间间存在截断）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[10,6)-(1)&quot;,&quot;[3,1)-(2)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;4&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;4&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2101543426">&quot;code&quot;:1,</stringProp>
              <stringProp name="1334438763">&quot;msg&quot;:&quot;中心主题节点输入值不在区间范围内！&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="57.换算（区间中间连接处值为空）  注意测试" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[10,)-(1)&quot;,&quot;[3,1)-(2)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;4&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;4&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="67791722">&quot;code&quot;:1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="58.换算（区间值都为0，或者都一样）  注意测试" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[0,0)-(1)&quot;,&quot;[0,0)-(2)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;4&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;4&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="67791722">&quot;code&quot;:1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="60.换算（区间值左右大小混乱）  注意测试" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[9,10)-(1)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;4&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;4&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="67791722">&quot;code&quot;:1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="61.换算（左边界边界值1）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[2000,1000)-(0.45)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;999.99&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;999.99&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="67791722">&quot;code&quot;:1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="62.换算（左边界边界值2）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[2000,1000)-(0.45)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;1000&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;1000&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="67791722">&quot;code&quot;:1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="63.换算（左边界边界值3）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[2000,1000)-(0.45)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;1000.01&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;1000.01&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="67791721">&quot;code&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="64.换算（右边界边界值1）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[2000,1000)-(0.45)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;2000&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;2000&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="67791721">&quot;code&quot;:0</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="65.换算（右边界边界值2）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[2000,1000)-(0.45)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;2000.01&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;2000.01&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="67791722">&quot;code&quot;:1</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="66.中心节点下4个子节点，换算（区间间存在截断）,计算值在区间内" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[10,6)-(1)&quot;,&quot;[3,1)-(2)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;4&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;7&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2101543395">&quot;code&quot;:0,</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="67.中心主题脚本里计算存在/0，应报异常" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;calType&quot;: &quot;SCRIPT&quot;,
			&quot;scriptInfo&quot;: &quot;if(#测试1#&gt;=1&amp;#测试1#&lt;=3){return 3}else if(#测试2#&gt;4){return (#测试4#+4)/0*3}else if(#测试4#&gt;5){return  -10}else if(#测试4#&gt;5){return  -1000}&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;resource&quot;: [&quot;4&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;weight&quot;: &quot;0.5&quot;,
				&quot;uselessWeight&quot;: false,
				&quot;reject&quot;: false,
				&quot;value&quot;: &quot;4&quot;
			},
			&quot;children&quot;: []
		}, {
			&quot;data&quot;: {
				&quot;id&quot;: &quot;c1c179seilk0&quot;,
				&quot;created&quot;: 1584338714994,
				&quot;text&quot;: &quot;测试2&quot;,
				&quot;value&quot;: &quot;5&quot;,
				&quot;resource&quot;: [&quot;5&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;uselessWeight&quot;: false,
				&quot;reject&quot;: false,
				&quot;layout_mind_offset&quot;: {
					&quot;x&quot;: 0,
					&quot;y&quot;: 22
				}
			},
			&quot;children&quot;: []
		}, {
			&quot;data&quot;: {
				&quot;id&quot;: &quot;c1c4ywdtyu00&quot;,
				&quot;created&quot;: 1584349343341,
				&quot;text&quot;: &quot;测试4&quot;,
				&quot;layout_mind_offset&quot;: {
					&quot;x&quot;: 463,
					&quot;y&quot;: 384
				},
				&quot;value&quot;: &quot;7&quot;,
				&quot;resource&quot;: [&quot;7&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;weight&quot;: &quot;0.2&quot;,
				&quot;uselessWeight&quot;: false,
				&quot;reject&quot;: false
			},
			&quot;children&quot;: []
		}, {
			&quot;data&quot;: {
				&quot;id&quot;: &quot;c1c4yzvtk800&quot;,
				&quot;created&quot;: 1584349350959,
				&quot;text&quot;: &quot;测试3&quot;,
				&quot;layout_mind_offset&quot;: {
					&quot;x&quot;: 463,
					&quot;y&quot;: 169
				},
				&quot;value&quot;: &quot;6&quot;,
				&quot;resource&quot;: [&quot;6&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;weight&quot;: &quot;0.2&quot;,
				&quot;uselessWeight&quot;: false,
				&quot;reject&quot;: false
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="67791722">&quot;code&quot;:1</stringProp>
              <stringProp name="-1468039072">&quot;msg&quot;:&quot;中心主题节点,脚本错误！&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="68.换算（第一个区间正常，第二个区间为空）" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tree" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{
	&quot;root&quot;: {
		&quot;data&quot;: {
			&quot;calType&quot;: &quot;CONVERSION&quot;,
			&quot;conversionInfo&quot;: {
				&quot;conversionFormula&quot;: &quot;INTERVAL&quot;,
				&quot;conversionParams&quot;: [&quot;[6,3)-(1)&quot;,&quot;[0,0)-(0)&quot;]
			},
			&quot;resource&quot;: [&quot;7.0&quot;],
			&quot;functionalSelection&quot;: &quot;function&quot;,
			&quot;obtainValueType&quot;: &quot;direct&quot;,
			&quot;created&quot;: 1584323286172,
			&quot;id&quot;: &quot;c1bvqdvvvvk0&quot;,
			&quot;text&quot;: &quot;中心主题&quot;,
			&quot;value&quot;: &quot;7.0&quot;
		},
		&quot;children&quot;: [{
			&quot;data&quot;: {
				&quot;calType&quot;: &quot;NORMAL&quot;,
				&quot;resource&quot;: [&quot;4&quot;],
				&quot;obtainValueType&quot;: &quot;direct&quot;,
				&quot;functionalSelection&quot;: &quot;normal&quot;,
				&quot;created&quot;: 1584338713678,
				&quot;reject&quot;: false,
				&quot;uselessWeight&quot;: false,
				&quot;weight&quot;: &quot;0.1&quot;,
				&quot;id&quot;: &quot;c1c1796miz40&quot;,
				&quot;text&quot;: &quot;测试1&quot;,
				&quot;value&quot;: &quot;4&quot;
			},
			&quot;children&quot;: []
		}]
	},
	&quot;template&quot;: &quot;default&quot;,
	&quot;theme&quot;: &quot;fresh-blue&quot;,
	&quot;version&quot;: &quot;1.4.33&quot;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">tree</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/valuation/calculateNodes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1585869649">中心主题节点计算后得出的值为：1.0;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
